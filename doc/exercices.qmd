---
title: "Exercices Algorithmie"
description: "Exercices simples pour apprendre le langage Python"
author: "Ludovic Deneuville"
format: 
  html:
    toc: true
    toc-location: left
    toc-expand: 3
from: markdown+emoji
number-sections: true
number-depth: 3
---

## Boucles

### Compte à rebours

Écrivez un code qui permet d'afficher ceci :

- [ ] Avec une boucle for
- [ ] Avec une boucle while

```{.txt}
5
4
3
2
1
boom
```

### Somme et produit

Écrivez un code qui permet de calculer et d'afficher la somme et le produit des entiers de 1 à 50.


### Tables de multiplications

Affichez les tables de multiplication de 1 à 9.

```{.txt}
1 x 1 = 1
1 x 2 = 2
...
1 x 9 = 9
-----------
2 x 1 = 2
...
9 x 9 = 81
```


## Chaines de caractères

### Palindrome

Écrivez une fonction `est_palindrome(texte) -> bool` qui retourne *True* si le paramètre texte est un palindrome (i.e. il se lit de la même manière dans les deux sens)

### Mot de passe

Écrivez une fonction `valider_mot_passe(pwd) -> bool` qui retourne *True* si le mot de passe est valide :

- contient au moins 12 caractères
- contient au moins une minuscule, une majuscule et un chiffre

Si l'une des condition n'est pas respectée, levez une exception avec un message explicite.

::: {.callout-note title="Lever une exception"}
```{.python}
if ma_condition:
    raise ValueError("Le mot de passe doit contenir au moins 12 caractères.")
```
:::

### Compter les lettres

Écrivez une fonction qui :

- prend en paramètre une chaine de caractère
- compte le nombre d'occurences de chaque lettre
- retourne un dictionnaire 
  - clé : lettre
  - valeur : nombre d'occurences de la lettre
